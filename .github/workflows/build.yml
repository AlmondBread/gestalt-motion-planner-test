name: Build and upload to PyPI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - os: linux-intel
            runs-on: ubuntu-latest
          # - os: linux-arm
          #   runs-on: ubuntu-24.04-arm
          # - os: windows-intel
          #   runs-on: windows-latest
          # - os: windows-arm
          #   runs-on: windows-11-arm
          # - os: macos-intel
          #   runs-on: macos-15-intel
          # - os: macos-arm
          #   runs-on: macos-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install Boost
        uses: MarkusJx/install-boost@v2
        id: install-boost
        with:
          boost_version: 1.89.0
          boost_install_dir: ${{ matrix.boost_install_dir }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        env:
          CIBW_PLATFORM: ${{ matrix.platform || 'auto' }}
          CIBW_ARCHS: ${{ matrix.archs || 'auto' }}
          CIBW_ENVIRONMENT: BOOST_ROOT=${{ steps.install-boost.outputs.BOOST_ROOT }}
          CIBW_ENVIRONMENT_WINDOWS: BOOST_ROOT_PIPELINE=${{ steps.install-boost.outputs.BOOST_ROOT }}
          CIBW_ENVIRONMENT_PASS_LINUX: BOOST_ROOT
          CIBW_BEFORE_BUILD_LINUX: apt update && apt install -y libboost-serialization-dev libboost-filesystem-dev libboost-system-dev libboost-program-options-dev libboost-test-dev

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
